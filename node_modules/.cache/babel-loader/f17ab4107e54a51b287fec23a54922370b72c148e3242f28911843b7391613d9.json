{"ast":null,"code":"var _jsxFileName = \"/workspaces/Wordle/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WordGenerator from \"./WordGenerator\";\nimport \"./Game.css\";\nimport Timer from \"./Timer\";\nimport Hint from \"./Hint\";\nimport GameSettings from \"./GameSettings\";\nimport Board from \"./Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game(_ref) {\n  _s();\n  let {\n    word,\n    debug\n  } = _ref;\n  const [guess, setGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [attempts, setAttempts] = useState(0);\n  const [maxAttempts, setMaxAttempts] = useState(6);\n  const [usedLetters, setUsedLetters] = useState(new Set());\n  const [stats, setStats] = useState({\n    wins: 0,\n    losses: 0,\n    guessesForWins: []\n  });\n  const [isWinning, setIsWinning] = useState(false);\n  const [timerExpiry, setTimerExpiry] = useState(null);\n  const [timerExpired, setTimerExpired] = useState(false);\n  const [hint, setHint] = useState(null);\n  const [settings, setSettings] = useState({\n    backgroundColor: \"#ffffff\",\n    fontFamily: \"Arial, sans-serif\"\n  });\n  function handleGuess(guess) {\n    const guessArray = guess.toLowerCase().split(\"\");\n    const wordArray = word.split(\"\");\n    const result = guessArray.map((letter, i) => {\n      if (wordArray.includes(letter)) {\n        if (wordArray[i] === letter) {\n          return \"right letter, right place\";\n        } else {\n          return \"right letter, wrong place\";\n        }\n      } else {\n        return \"wrong letter\";\n      }\n    });\n    setGuesses([...guesses, {\n      guess,\n      result\n    }]);\n    setGuess(\"\");\n    setAttempts(attempts + 1);\n    const newUsedLetters = new Set(usedLetters);\n    guessArray.forEach(letter => newUsedLetters.add(letter));\n    setUsedLetters(newUsedLetters);\n    if (result.filter(r => r.includes(\"right place\")).length === 5) {\n      setIsWinning(true);\n      alert(`Congratulations! You guessed the word \"${word}\" in ${attempts} attempts.`);\n      resetGame(true);\n    } else if (attempts + 1 >= maxAttempts) {\n      alert(`Sorry, you ran out of attempts. The word was \"${word}\".`);\n      resetGame(false);\n    }\n  }\n  function resetGame(won) {\n    if (won) {\n      setStats({\n        ...stats,\n        wins: stats.wins + 1,\n        guessesForWins: [...stats.guessesForWins, attempts]\n      });\n    } else {\n      setStats({\n        ...stats,\n        losses: stats.losses + 1\n      });\n    }\n    setGuesses([]);\n    setAttempts(0);\n    setMaxAttempts(6);\n    setUsedLetters(new Set());\n    fetchWord();\n  }\n  function handleUpdateSettings(newSettings) {\n    setSettings(newSettings);\n  }\n  function isGuessValid(guess) {\n    return /^[a-zA-Z]+$/.test(guess) && guess.length === 5;\n  }\n  function handleInputChange(event) {\n    setGuess(event.target.value.toUpperCase());\n  }\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    if (!isGuessValid(guess)) {\n      alert(\"Please enter a valid 5-letter word.\");\n      return;\n    }\n    if (usedLetters.has(guess[0]) || usedLetters.has(guess[1]) || usedLetters.has(guess[2]) || usedLetters.has(guess[3]) || usedLetters.has(guess[4])) {\n      alert(\"You have already used one or more of the letters in that word. Please try again.\");\n      return;\n    }\n    handleGuess(guess);\n  }\n  function fetchWord() {\n    axios.get(\"https://api.wordsapi.com/v1/words?random=true&partOfSpeech=noun&letters=5&api_key=<your_api_key>\").then(response => {\n      if (response.data.length === 0) {\n        fetchWord();\n      } else {\n        const word = response.data[0].word.toUpperCase();\n        setGuess(\"\");\n        setGuesses([]);\n        setAttempts(0);\n        setMaxAttempts(6);\n        setUsedLetters(new Set());\n        WordGenerator.set(word);\n      }\n    });\n  }\n  const styles = {\n    fontFamily: \"Arial, sans-serif\",\n    margin: \"0 auto\",\n    maxWidth: 600,\n    padding: 20\n  };\n  const headingStyles = {\n    textAlign: \"center\",\n    marginBottom: 20,\n    fontSize: 28\n  };\n  const labelStyles = {\n    fontSize: 18\n  };\n  const inputStyles = {\n    padding: 10,\n    fontSize: 18\n  };\n  const buttonStyles = {\n    padding: \"10px 20px\",\n    fontSize: 18,\n    backgroundColor: \"#4CAF50\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 4,\n    cursor: \"pointer\"\n  };\n  const infoStyles = {\n    fontSize: 18,\n    marginBottom: 10\n  };\n  const resultStyles = {\n    fontSize: 16\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: headingStyles,\n      children: \"Guess the 5-letter word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: infoStyles,\n      children: [\"Word:\", \" \", word && word.split(\"\").map(() => \"_ \").join(\"\")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guessInput\",\n        style: labelStyles,\n        children: \"Enter your guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"guessInput\",\n        value: guess,\n        onChange: handleInputChange,\n        style: inputStyles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyles,\n        children: \"Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: infoStyles,\n      children: [\"Attempts: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: infoStyles,\n      children: [\"Max attempts: \", maxAttempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: infoStyles,\n      children: [\"Used letters: \", Array.from(usedLetters).join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), debug && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Answer: \", word]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: headingStyles,\n      children: \"Guess history:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), guesses.map((guess, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: infoStyles,\n        children: guess.guess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: guess.result.map((result, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: resultStyles,\n          children: result\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this)), guesses.filter(r => Array.isArray(r) && r.includes(\"right place\")).length === 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: isWinning ? \"winning-message\" : \"\",\n        style: headingStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: isWinning ? \"winning-message\" : \"\",\n          children: [\"Congratulations! You guessed the word \\\"\", word, \"\\\" in \", attempts, \" \", \"attempts.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Play again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this), attempts + 1 >= maxAttempts && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sorry, you ran out of attempts. The word was \\\"\", word, \"\\\".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Timer, {\n        expiryTimestamp: Date.now() + 120000,\n        onExpire: () => setTimerExpired(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hint, {\n        word: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameSettings, {\n        settings: settings,\n        onUpdateSettings: handleUpdateSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        guesses: guesses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Wins: \", stats.wins]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Losses: \", stats.losses]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Avg guesses for wins:\", \" \", stats.guessesForWins.length ? (stats.guessesForWins.reduce((a, b) => a + b, 0) / stats.guessesForWins.length).toFixed(2) : 0]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"KCGIERpMZJU1ClEX6kNQLfCsqWc=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","axios","WordGenerator","Timer","Hint","GameSettings","Board","jsxDEV","_jsxDEV","Game","_ref","_s","word","debug","guess","setGuess","guesses","setGuesses","attempts","setAttempts","maxAttempts","setMaxAttempts","usedLetters","setUsedLetters","Set","stats","setStats","wins","losses","guessesForWins","isWinning","setIsWinning","timerExpiry","setTimerExpiry","timerExpired","setTimerExpired","hint","setHint","settings","setSettings","backgroundColor","fontFamily","handleGuess","guessArray","toLowerCase","split","wordArray","result","map","letter","i","includes","newUsedLetters","forEach","add","filter","r","length","alert","resetGame","won","fetchWord","handleUpdateSettings","newSettings","isGuessValid","test","handleInputChange","event","target","value","toUpperCase","handleFormSubmit","preventDefault","has","get","then","response","data","set","styles","margin","maxWidth","padding","headingStyles","textAlign","marginBottom","fontSize","labelStyles","inputStyles","buttonStyles","color","border","borderRadius","cursor","infoStyles","resultStyles","style","children","fileName","_jsxFileName","lineNumber","columnNumber","join","onSubmit","htmlFor","type","id","onChange","Array","from","isArray","className","onClick","expiryTimestamp","Date","now","onExpire","onUpdateSettings","reduce","a","b","toFixed","_c","$RefreshReg$"],"sources":["/workspaces/Wordle/src/components/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WordGenerator from \"./WordGenerator\";\nimport \"./Game.css\";\nimport Timer from \"./Timer\";\nimport Hint from \"./Hint\";\nimport GameSettings from \"./GameSettings\";\nimport Board from \"./Board\";\n\nfunction Game({ word, debug }) {\n  const [guess, setGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [attempts, setAttempts] = useState(0);\n  const [maxAttempts, setMaxAttempts] = useState(6);\n  const [usedLetters, setUsedLetters] = useState(new Set());\n  const [stats, setStats] = useState({\n    wins: 0,\n    losses: 0,\n    guessesForWins: [],\n  });\n  const [isWinning, setIsWinning] = useState(false);\n  const [timerExpiry, setTimerExpiry] = useState(null);\n  const [timerExpired, setTimerExpired] = useState(false);\n  const [hint, setHint] = useState(null);\n  const [settings, setSettings] = useState({\n    backgroundColor: \"#ffffff\",\n    fontFamily: \"Arial, sans-serif\",\n  });\n\n  function handleGuess(guess) {\n    const guessArray = guess.toLowerCase().split(\"\");\n    const wordArray = word.split(\"\");\n\n    const result = guessArray.map((letter, i) => {\n      if (wordArray.includes(letter)) {\n        if (wordArray[i] === letter) {\n          return \"right letter, right place\";\n        } else {\n          return \"right letter, wrong place\";\n        }\n      } else {\n        return \"wrong letter\";\n      }\n    });\n\n    setGuesses([...guesses, { guess, result }]);\n    setGuess(\"\");\n    setAttempts(attempts + 1);\n\n    const newUsedLetters = new Set(usedLetters);\n    guessArray.forEach((letter) => newUsedLetters.add(letter));\n    setUsedLetters(newUsedLetters);\n\n    if (result.filter((r) => r.includes(\"right place\")).length === 5) {\n      setIsWinning(true);\n      alert(\n        `Congratulations! You guessed the word \"${word}\" in ${attempts} attempts.`\n      );\n      resetGame(true);\n    } else if (attempts + 1 >= maxAttempts) {\n      alert(`Sorry, you ran out of attempts. The word was \"${word}\".`);\n      resetGame(false);\n    }\n  }\n\n  function resetGame(won) {\n    if (won) {\n      setStats({\n        ...stats,\n        wins: stats.wins + 1,\n        guessesForWins: [...stats.guessesForWins, attempts],\n      });\n    } else {\n      setStats({ ...stats, losses: stats.losses + 1 });\n    }\n    setGuesses([]);\n    setAttempts(0);\n    setMaxAttempts(6);\n    setUsedLetters(new Set());\n    fetchWord();\n  }\n\n  function handleUpdateSettings(newSettings) {\n    setSettings(newSettings);\n  }\n\n  function isGuessValid(guess) {\n    return /^[a-zA-Z]+$/.test(guess) && guess.length === 5;\n  }\n\n  function handleInputChange(event) {\n    setGuess(event.target.value.toUpperCase());\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (!isGuessValid(guess)) {\n      alert(\"Please enter a valid 5-letter word.\");\n      return;\n    }\n\n    if (\n      usedLetters.has(guess[0]) ||\n      usedLetters.has(guess[1]) ||\n      usedLetters.has(guess[2]) ||\n      usedLetters.has(guess[3]) ||\n      usedLetters.has(guess[4])\n    ) {\n      alert(\n        \"You have already used one or more of the letters in that word. Please try again.\"\n      );\n      return;\n    }\n\n    handleGuess(guess);\n  }\n\n  function fetchWord() {\n    axios\n      .get(\n        \"https://api.wordsapi.com/v1/words?random=true&partOfSpeech=noun&letters=5&api_key=<your_api_key>\"\n      )\n      .then((response) => {\n        if (response.data.length === 0) {\n          fetchWord();\n        } else {\n          const word = response.data[0].word.toUpperCase();\n          setGuess(\"\");\n          setGuesses([]);\n          setAttempts(0);\n          setMaxAttempts(6);\n          setUsedLetters(new Set());\n          WordGenerator.set(word);\n        }\n      });\n  }\n\n  const styles = {\n    fontFamily: \"Arial, sans-serif\",\n    margin: \"0 auto\",\n    maxWidth: 600,\n    padding: 20,\n  };\n\n  const headingStyles = {\n    textAlign: \"center\",\n    marginBottom: 20,\n    fontSize: 28,\n  };\n\n  const labelStyles = {\n    fontSize: 18,\n  };\n\n  const inputStyles = {\n    padding: 10,\n    fontSize: 18,\n  };\n\n  const buttonStyles = {\n    padding: \"10px 20px\",\n    fontSize: 18,\n    backgroundColor: \"#4CAF50\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 4,\n    cursor: \"pointer\",\n  };\n\n  const infoStyles = {\n    fontSize: 18,\n    marginBottom: 10,\n  };\n\n  const resultStyles = {\n    fontSize: 16,\n  };\n\n  return (\n    <div style={styles}>\n      <h1 style={headingStyles}>Guess the 5-letter word</h1>\n      <p style={infoStyles}>\n        Word:{\" \"}\n        {word &&\n          word\n            .split(\"\")\n            .map(() => \"_ \")\n            .join(\"\")}\n      </p>\n      <form onSubmit={handleFormSubmit}>\n        <label htmlFor=\"guessInput\" style={labelStyles}>\n          Enter your guess:\n        </label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"guessInput\"\n          value={guess}\n          onChange={handleInputChange}\n          style={inputStyles}\n        />\n        <br />\n        <button type=\"submit\" style={buttonStyles}>\n          Guess\n        </button>\n      </form>\n      <p style={infoStyles}>Attempts: {attempts}</p>\n      <p style={infoStyles}>Max attempts: {maxAttempts}</p>\n      <p style={infoStyles}>\n        Used letters: {Array.from(usedLetters).join(\", \")}\n      </p>\n      {debug && <p>Answer: {word}</p>}\n      <h2 style={headingStyles}>Guess history:</h2>\n      {guesses.map((guess, i) => (\n        <div key={i} style={{ marginBottom: 20 }}>\n          <p style={infoStyles}>{guess.guess}</p>\n          <ul>\n            {guess.result.map((result, i) => (\n              <li key={i} style={resultStyles}>\n                {result}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n      {guesses.filter((r) => Array.isArray(r) && r.includes(\"right place\"))\n        .length === 5 && (\n        <div style={{ marginBottom: 20 }}>\n          <p\n            className={isWinning ? \"winning-message\" : \"\"}\n            style={headingStyles}\n          >\n            <p className={isWinning ? \"winning-message\" : \"\"}>\n              Congratulations! You guessed the word \"{word}\" in {attempts}{\" \"}\n              attempts.\n            </p>\n            <button onClick={resetGame}>Play again</button>\n          </p>\n        </div>\n      )}\n\n      {attempts + 1 >= maxAttempts && (\n        <div>\n          <p>Sorry, you ran out of attempts. The word was \"{word}\".</p>\n          <button onClick={resetGame}>Play again</button>\n        </div>\n      )}\n      <div>\n        <Timer\n          expiryTimestamp={Date.now() + 120000}\n          onExpire={() => setTimerExpired(true)}\n        />\n        <Hint word={word} />\n        <GameSettings\n          settings={settings}\n          onUpdateSettings={handleUpdateSettings}\n        />\n        <Board guesses={guesses} />\n        <p>Wins: {stats.wins}</p>\n        <p>Losses: {stats.losses}</p>\n        <p>\n          Avg guesses for wins:{\" \"}\n          {stats.guessesForWins.length\n            ? (\n                stats.guessesForWins.reduce((a, b) => a + b, 0) /\n                stats.guessesForWins.length\n              ).toFixed(2)\n            : 0}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}