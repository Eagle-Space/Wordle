{"ast":null,"code":"import _objectSpread from\"/workspaces/Wordle/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/workspaces/Wordle/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/workspaces/Wordle/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import axios from\"axios\";import WordGenerator from\"./WordGenerator\";import\"./Game.css\";import Timer from\"./Timer\";import Hint from\"./Hint\";import GameSettings from\"./GameSettings\";import Board from\"./Board\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Game(_ref){var word=_ref.word,debug=_ref.debug;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),guess=_useState2[0],setGuess=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),guesses=_useState4[0],setGuesses=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),attempts=_useState6[0],setAttempts=_useState6[1];var _useState7=useState(6),_useState8=_slicedToArray(_useState7,2),maxAttempts=_useState8[0],setMaxAttempts=_useState8[1];var _useState9=useState(new Set()),_useState10=_slicedToArray(_useState9,2),usedLetters=_useState10[0],setUsedLetters=_useState10[1];var _useState11=useState({wins:0,losses:0,guessesForWins:[]}),_useState12=_slicedToArray(_useState11,2),stats=_useState12[0],setStats=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWinning=_useState14[0],setIsWinning=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),timerExpiry=_useState16[0],setTimerExpiry=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),timerExpired=_useState18[0],setTimerExpired=_useState18[1];var _useState19=useState(null),_useState20=_slicedToArray(_useState19,2),hint=_useState20[0],setHint=_useState20[1];var _useState21=useState({backgroundColor:\"#ffffff\",fontFamily:\"Arial, sans-serif\"}),_useState22=_slicedToArray(_useState21,2),settings=_useState22[0],setSettings=_useState22[1];function handleGuess(guess){var guessArray=guess.toLowerCase().split(\"\");var wordArray=word.split(\"\");var result=guessArray.map(function(letter,i){if(wordArray.includes(letter)){if(wordArray[i]===letter){return\"right letter, right place\";}else{return\"right letter, wrong place\";}}else{return\"wrong letter\";}});setGuesses([].concat(_toConsumableArray(guesses),[{guess:guess,result:result}]));setGuess(\"\");setAttempts(attempts+1);var newUsedLetters=new Set(usedLetters);guessArray.forEach(function(letter){return newUsedLetters.add(letter);});setUsedLetters(newUsedLetters);if(result.filter(function(r){return r.includes(\"right place\");}).length===5){setIsWinning(true);alert(\"Congratulations! You guessed the word \\\"\".concat(word,\"\\\" in \").concat(attempts,\" attempts.\"));resetGame(true);}else if(attempts+1>=maxAttempts){alert(\"Sorry, you ran out of attempts. The word was \\\"\".concat(word,\"\\\".\"));resetGame(false);}}function resetGame(won){if(won){setStats(_objectSpread(_objectSpread({},stats),{},{wins:stats.wins+1,guessesForWins:[].concat(_toConsumableArray(stats.guessesForWins),[attempts])}));}else{setStats(_objectSpread(_objectSpread({},stats),{},{losses:stats.losses+1}));}setGuesses([]);setAttempts(0);setMaxAttempts(6);setUsedLetters(new Set());fetchWord();}function handleUpdateSettings(newSettings){setSettings(newSettings);}function isGuessValid(guess){return /^[a-zA-Z]+$/.test(guess)&&guess.length===5;}function handleInputChange(event){setGuess(event.target.value.toUpperCase());}function handleFormSubmit(event){event.preventDefault();if(!isGuessValid(guess)){alert(\"Please enter a valid 5-letter word.\");return;}if(usedLetters.has(guess[0])||usedLetters.has(guess[1])||usedLetters.has(guess[2])||usedLetters.has(guess[3])||usedLetters.has(guess[4])){alert(\"You have already used one or more of the letters in that word. Please try again.\");return;}handleGuess(guess);}function fetchWord(){axios.get(\"https://api.wordsapi.com/v1/words?random=true&partOfSpeech=noun&letters=5&api_key=<your_api_key>\").then(function(response){if(response.data.length===0){fetchWord();}else{var _word=response.data[0].word.toUpperCase();setGuess(\"\");setGuesses([]);setAttempts(0);setMaxAttempts(6);setUsedLetters(new Set());WordGenerator.set(_word);}});}var styles={fontFamily:\"Arial, sans-serif\",margin:\"0 auto\",maxWidth:600,padding:20};var headingStyles={textAlign:\"center\",marginBottom:20,fontSize:28};var labelStyles={fontSize:18};var inputStyles={padding:10,fontSize:18};var buttonStyles={padding:\"10px 20px\",fontSize:18,backgroundColor:\"#4CAF50\",color:\"white\",border:\"none\",borderRadius:4,cursor:\"pointer\"};var infoStyles={fontSize:18,marginBottom:10};var resultStyles={fontSize:16};return/*#__PURE__*/_jsxs(\"div\",{style:styles,children:[/*#__PURE__*/_jsx(\"h1\",{style:headingStyles,children:\"Guess the 5-letter word\"}),/*#__PURE__*/_jsxs(\"p\",{style:infoStyles,children:[\"Word:\",\" \",word&&word.split(\"\").map(function(){return\"_ \";}).join(\"\")]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleFormSubmit,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"guessInput\",style:labelStyles,children:\"Enter your guess:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"guessInput\",value:guess,onChange:handleInputChange,style:inputStyles}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:buttonStyles,children:\"Guess\"})]}),/*#__PURE__*/_jsxs(\"p\",{style:infoStyles,children:[\"Attempts: \",attempts]}),/*#__PURE__*/_jsxs(\"p\",{style:infoStyles,children:[\"Max attempts: \",maxAttempts]}),/*#__PURE__*/_jsxs(\"p\",{style:infoStyles,children:[\"Used letters: \",Array.from(usedLetters).join(\", \")]}),debug&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Answer: \",word]}),/*#__PURE__*/_jsx(\"h2\",{style:headingStyles,children:\"Guess history:\"}),guesses.map(function(guess,i){return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:20},children:[/*#__PURE__*/_jsx(\"p\",{style:infoStyles,children:guess.guess}),/*#__PURE__*/_jsx(\"ul\",{children:guess.result.map(function(result,i){return/*#__PURE__*/_jsx(\"li\",{style:resultStyles,children:result},i);})})]},i);}),guesses.filter(function(r){return Array.isArray(r)&&r.includes(\"right place\");}).length===5&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:20},children:/*#__PURE__*/_jsxs(\"p\",{className:isWinning?\"winning-message\":\"\",style:headingStyles,children:[/*#__PURE__*/_jsxs(\"p\",{className:isWinning?\"winning-message\":\"\",children:[\"Congratulations! You guessed the word \\\"\",word,\"\\\" in \",attempts,\" \",\"attempts.\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,children:\"Play again\"})]})}),attempts+1>=maxAttempts&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Sorry, you ran out of attempts. The word was \\\"\",word,\"\\\".\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,children:\"Play again\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Timer,{expiryTimestamp:Date.now()+120000,onExpire:function onExpire(){return setTimerExpired(true);}}),/*#__PURE__*/_jsx(Hint,{word:word}),/*#__PURE__*/_jsx(GameSettings,{settings:settings,onUpdateSettings:handleUpdateSettings}),/*#__PURE__*/_jsx(Board,{guesses:guesses}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Wins: \",stats.wins]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Losses: \",stats.losses]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Avg guesses for wins:\",\" \",stats.guessesForWins.length?(stats.guessesForWins.reduce(function(a,b){return a+b;},0)/stats.guessesForWins.length).toFixed(2):0]})]})]});}export default Game;","map":{"version":3,"names":["React","useState","axios","WordGenerator","Timer","Hint","GameSettings","Board","jsx","_jsx","jsxs","_jsxs","Game","_ref","word","debug","_useState","_useState2","_slicedToArray","guess","setGuess","_useState3","_useState4","guesses","setGuesses","_useState5","_useState6","attempts","setAttempts","_useState7","_useState8","maxAttempts","setMaxAttempts","_useState9","Set","_useState10","usedLetters","setUsedLetters","_useState11","wins","losses","guessesForWins","_useState12","stats","setStats","_useState13","_useState14","isWinning","setIsWinning","_useState15","_useState16","timerExpiry","setTimerExpiry","_useState17","_useState18","timerExpired","setTimerExpired","_useState19","_useState20","hint","setHint","_useState21","backgroundColor","fontFamily","_useState22","settings","setSettings","handleGuess","guessArray","toLowerCase","split","wordArray","result","map","letter","i","includes","concat","_toConsumableArray","newUsedLetters","forEach","add","filter","r","length","alert","resetGame","won","_objectSpread","fetchWord","handleUpdateSettings","newSettings","isGuessValid","test","handleInputChange","event","target","value","toUpperCase","handleFormSubmit","preventDefault","has","get","then","response","data","set","styles","margin","maxWidth","padding","headingStyles","textAlign","marginBottom","fontSize","labelStyles","inputStyles","buttonStyles","color","border","borderRadius","cursor","infoStyles","resultStyles","style","children","join","onSubmit","htmlFor","type","id","onChange","Array","from","isArray","className","onClick","expiryTimestamp","Date","now","onExpire","onUpdateSettings","reduce","a","b","toFixed"],"sources":["/workspaces/Wordle/src/components/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WordGenerator from \"./WordGenerator\";\nimport \"./Game.css\";\nimport Timer from \"./Timer\";\nimport Hint from \"./Hint\";\nimport GameSettings from \"./GameSettings\";\nimport Board from \"./Board\";\n\nfunction Game({ word, debug }) {\n  const [guess, setGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [attempts, setAttempts] = useState(0);\n  const [maxAttempts, setMaxAttempts] = useState(6);\n  const [usedLetters, setUsedLetters] = useState(new Set());\n  const [stats, setStats] = useState({\n    wins: 0,\n    losses: 0,\n    guessesForWins: [],\n  });\n  const [isWinning, setIsWinning] = useState(false);\n  const [timerExpiry, setTimerExpiry] = useState(null);\n  const [timerExpired, setTimerExpired] = useState(false);\n  const [hint, setHint] = useState(null);\n  const [settings, setSettings] = useState({\n    backgroundColor: \"#ffffff\",\n    fontFamily: \"Arial, sans-serif\",\n  });\n\n  function handleGuess(guess) {\n    const guessArray = guess.toLowerCase().split(\"\");\n    const wordArray = word.split(\"\");\n\n    const result = guessArray.map((letter, i) => {\n      if (wordArray.includes(letter)) {\n        if (wordArray[i] === letter) {\n          return \"right letter, right place\";\n        } else {\n          return \"right letter, wrong place\";\n        }\n      } else {\n        return \"wrong letter\";\n      }\n    });\n\n    setGuesses([...guesses, { guess, result }]);\n    setGuess(\"\");\n    setAttempts(attempts + 1);\n\n    const newUsedLetters = new Set(usedLetters);\n    guessArray.forEach((letter) => newUsedLetters.add(letter));\n    setUsedLetters(newUsedLetters);\n\n    if (result.filter((r) => r.includes(\"right place\")).length === 5) {\n      setIsWinning(true);\n      alert(\n        `Congratulations! You guessed the word \"${word}\" in ${attempts} attempts.`\n      );\n      resetGame(true);\n    } else if (attempts + 1 >= maxAttempts) {\n      alert(`Sorry, you ran out of attempts. The word was \"${word}\".`);\n      resetGame(false);\n    }\n  }\n\n  function resetGame(won) {\n    if (won) {\n      setStats({\n        ...stats,\n        wins: stats.wins + 1,\n        guessesForWins: [...stats.guessesForWins, attempts],\n      });\n    } else {\n      setStats({ ...stats, losses: stats.losses + 1 });\n    }\n    setGuesses([]);\n    setAttempts(0);\n    setMaxAttempts(6);\n    setUsedLetters(new Set());\n    fetchWord();\n  }\n\n  function handleUpdateSettings(newSettings) {\n    setSettings(newSettings);\n  }\n\n  function isGuessValid(guess) {\n    return /^[a-zA-Z]+$/.test(guess) && guess.length === 5;\n  }\n\n  function handleInputChange(event) {\n    setGuess(event.target.value.toUpperCase());\n  }\n\n  function handleFormSubmit(event) {\n    event.preventDefault();\n\n    if (!isGuessValid(guess)) {\n      alert(\"Please enter a valid 5-letter word.\");\n      return;\n    }\n\n    if (\n      usedLetters.has(guess[0]) ||\n      usedLetters.has(guess[1]) ||\n      usedLetters.has(guess[2]) ||\n      usedLetters.has(guess[3]) ||\n      usedLetters.has(guess[4])\n    ) {\n      alert(\n        \"You have already used one or more of the letters in that word. Please try again.\"\n      );\n      return;\n    }\n\n    handleGuess(guess);\n  }\n\n  function fetchWord() {\n    axios\n      .get(\n        \"https://api.wordsapi.com/v1/words?random=true&partOfSpeech=noun&letters=5&api_key=<your_api_key>\"\n      )\n      .then((response) => {\n        if (response.data.length === 0) {\n          fetchWord();\n        } else {\n          const word = response.data[0].word.toUpperCase();\n          setGuess(\"\");\n          setGuesses([]);\n          setAttempts(0);\n          setMaxAttempts(6);\n          setUsedLetters(new Set());\n          WordGenerator.set(word);\n        }\n      });\n  }\n\n  const styles = {\n    fontFamily: \"Arial, sans-serif\",\n    margin: \"0 auto\",\n    maxWidth: 600,\n    padding: 20,\n  };\n\n  const headingStyles = {\n    textAlign: \"center\",\n    marginBottom: 20,\n    fontSize: 28,\n  };\n\n  const labelStyles = {\n    fontSize: 18,\n  };\n\n  const inputStyles = {\n    padding: 10,\n    fontSize: 18,\n  };\n\n  const buttonStyles = {\n    padding: \"10px 20px\",\n    fontSize: 18,\n    backgroundColor: \"#4CAF50\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 4,\n    cursor: \"pointer\",\n  };\n\n  const infoStyles = {\n    fontSize: 18,\n    marginBottom: 10,\n  };\n\n  const resultStyles = {\n    fontSize: 16,\n  };\n\n  return (\n    <div style={styles}>\n      <h1 style={headingStyles}>Guess the 5-letter word</h1>\n      <p style={infoStyles}>\n        Word:{\" \"}\n        {word &&\n          word\n            .split(\"\")\n            .map(() => \"_ \")\n            .join(\"\")}\n      </p>\n      <form onSubmit={handleFormSubmit}>\n        <label htmlFor=\"guessInput\" style={labelStyles}>\n          Enter your guess:\n        </label>\n        <br />\n        <input\n          type=\"text\"\n          id=\"guessInput\"\n          value={guess}\n          onChange={handleInputChange}\n          style={inputStyles}\n        />\n        <br />\n        <button type=\"submit\" style={buttonStyles}>\n          Guess\n        </button>\n      </form>\n      <p style={infoStyles}>Attempts: {attempts}</p>\n      <p style={infoStyles}>Max attempts: {maxAttempts}</p>\n      <p style={infoStyles}>\n        Used letters: {Array.from(usedLetters).join(\", \")}\n      </p>\n      {debug && <p>Answer: {word}</p>}\n      <h2 style={headingStyles}>Guess history:</h2>\n      {guesses.map((guess, i) => (\n        <div key={i} style={{ marginBottom: 20 }}>\n          <p style={infoStyles}>{guess.guess}</p>\n          <ul>\n            {guess.result.map((result, i) => (\n              <li key={i} style={resultStyles}>\n                {result}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n      {guesses.filter((r) => Array.isArray(r) && r.includes(\"right place\"))\n        .length === 5 && (\n        <div style={{ marginBottom: 20 }}>\n          <p\n            className={isWinning ? \"winning-message\" : \"\"}\n            style={headingStyles}\n          >\n            <p className={isWinning ? \"winning-message\" : \"\"}>\n              Congratulations! You guessed the word \"{word}\" in {attempts}{\" \"}\n              attempts.\n            </p>\n            <button onClick={resetGame}>Play again</button>\n          </p>\n        </div>\n      )}\n\n      {attempts + 1 >= maxAttempts && (\n        <div>\n          <p>Sorry, you ran out of attempts. The word was \"{word}\".</p>\n          <button onClick={resetGame}>Play again</button>\n        </div>\n      )}\n      <div>\n        <Timer\n          expiryTimestamp={Date.now() + 120000}\n          onExpire={() => setTimerExpired(true)}\n        />\n        <Hint word={word} />\n        <GameSettings\n          settings={settings}\n          onUpdateSettings={handleUpdateSettings}\n        />\n        <Board guesses={guesses} />\n        <p>Wins: {stats.wins}</p>\n        <p>Losses: {stats.losses}</p>\n        <p>\n          Avg guesses for wins:{\" \"}\n          {stats.guessesForWins.length\n            ? (\n                stats.guessesForWins.reduce((a, b) => a + b, 0) /\n                stats.guessesForWins.length\n              ).toFixed(2)\n            : 0}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}